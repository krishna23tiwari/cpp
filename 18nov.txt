#include <bits/stdc++.h>
using namespace std;

int gcd(int a, int b) 
{
    return b == 0 ? a : gcd(b, a % b);
}

int lcm(int a, int b) 
{
    return (a / gcd(a, b)) * b;
}

int lcmarray(vector<int>& arr) 
{
    int result = arr[0];
    for (size_t i = 1; i < arr.size(); i++) 
    {
        result = lcm(result, arr[i]);
    }
    return result;
}

int gcdarray(vector<int>& arr) 
{
    int result = arr[0];
    for (size_t i = 1; i < arr.size(); i++) 
    {
        result = gcd(result, arr[i]);
    }
    return result;
}

int getTotalX(vector<int>& a,vector<int>& b) 
{
    int a1 = lcmarray(a);
    int b1 = gcdarray(b);

    cout << "LCM of array a: " << a1 << endl;
    cout << "GCD of array b: " << b1 << endl;

    int count = 0;
    for (int multiple = a1; multiple <= b1; multiple += a1) 
    {
        if (b1 % multiple == 0) 
        {
            count++;
            cout << "Found valid number: " << multiple << endl;
        }
    }

    return count;
}

int main() 
{
    int n, m;
    cout << "Enter the size of array a and b: ";
    cin >> n >> m;
    vector<int> a(n);
    vector<int> b(m);
    
    cout << "Enter elements of array a: ";
    for (int i = 0; i < n; i++) 
    {
        cin >> a[i];
    }
    cout << "Enter elements of array b: ";
    for (int i = 0; i < m; i++) 
    {
        cin >> b[i];
    }
    int result = getTotalX(a, b);
    cout << "Number of integers between the two arrays: " << result << endl;
    return 0;
}


