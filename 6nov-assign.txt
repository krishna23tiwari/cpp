1. add all the non diagonal elements of 2d vector

#include <bits/stdc++.h>
using namespace std;

int sum(vector<vector<int>>& matrix) 
{
    int sum = 0;
    int n = matrix.size();

    for (int i = 0; i < n; ++i) 
    {
        for (int j = 0; j < n; ++j) 
        {
    
            if (i != j) 
            {
                sum += matrix[i][j];
            }
        }
    }

    return sum;
}

int main() 
{
    vector<vector<int>> matrix = 
    {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}
    };

    int result = sum(matrix);

    cout << "Sum of non-diagonal elements: " << result << endl;

    return 0;
}

---------------------------------------------------------------------------------------------------------------

2. [1,2,3,4,5,6,7,8,9] convert this array into 2d vector 
a) find total number of elements in the array = 9
b) perfect sqaure and based on that convert it into 2d array 3*3

#include <bits/stdc++.h>
using namespace std;

int main() 
{
    int arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    int size = sizeof(arr) / sizeof(arr[0]); 
    
    cout << "Total number in array = " << size << std::endl;

    int n = static_cast<int>(sqrt(size));
    
    if (n * n != size) 
    {
        cout << "The number of elements is not a perfect square!" << endl;
        return 1;
    }

    vector<vector<int>> matrix(n, vector<int>(n));

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            matrix[i][j] = arr[i * n + j];
        }
    }

    cout << "2D Array (3x3):" << endl;
    for (auto& row : matrix) {
        for (int elem : row) {
            cout << elem << " ";
        }
        cout << endl; 
    }

    return 0;
}


------------------------------------------------------------------------------------------------------------

3) all the even positons of 1d array should be swapped with odd position

#include <bits/stdc++.h>
using namespace std;

int main() 
{
    
    int arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9}; 
    int size = sizeof(arr) / sizeof(arr[0]);

    for (int i = 0; i < size - 1; i += 2)
    {
        int temp = arr[i];
        arr[i] = arr[i + 1];
        arr[i + 1] = temp;
    }

    cout << "Array after swapping:" <<endl;
    for (int i = 0; i < size; ++i) 
    {
        cout << arr[i] << " ";
    }
    cout <<endl;

    return 0;
}

----------------------------------------------------------------------------------------------------------------

4) add all the even values and odd positon values and find the absolute difference difference bw them 
0 1 2 3 4 5 6 7 8
1 2 3 4 5 6 7 8 9 = ( 2+4+6+8 even values)
 (2+4+6+8 odd postion)   ans = 0

#include <bits/stdc++.h>
using namespace std;

int main() 
{
    int arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 19}; 
    int size = sizeof(arr) / sizeof(arr[0]); 

    int a = 0; 
    int b = 0;

    for (int i = 0; i < size; ++i) 
    {
        if (arr[i] % 2 == 0) 
        {
            a += arr[i];
        }
        
        if (i % 2 == 1) 
        {
            b += arr[i]; 
        }
    }

    int diff = abs(a - b);

    cout << "Sum even values: " << a << endl;
    cout << "Sum of values at odd positions: " << b << endl;
    cout << "Absolute difference: " << diff << endl;

    return 0;
}

-------------------------------------------------------------------------------------------------------------

5) [10,12,24,64,128,1024,125] extract power of 2 and return a new array [64,128,1024]

#include <bits/stdc++.h>
using namespace std;

bool isPowerOfTwo(int n) 
{
    return (n > 0) && ((n & (n - 1)) == 0);
}

int main() 
{
    int arr[] = {10, 12, 24, 64, 128, 1024, 125}; 
    int size = sizeof(arr) / sizeof(arr[0]);

    int powersOfTwo[size];
    int count = 0;

    for (int i = 0; i < size; ++i) 
    {
        if (isPowerOfTwo(arr[i])) 
        {
            powersOfTwo[count] = arr[i]; 
            count++;
        }
    }

    cout << "Powers of 2 elements: [";
    for (int i = 0; i < count; ++i) 
    {
        cout << powersOfTwo[i];
        if (i < count - 1) 
        {
            cout << ", "; 
        }
    }
    cout << "]" << endl;

    return 0;
}

---------------------------------------------------------------------------------------------------------------

6)[6,12,18,24.36,40] even no of elements ka array lena hai and each corresponding values ka hcf nikalna hai aur usko ek naye array mai store karna hai

#include <bits/stdc++.h>
using namespace std;

int main() 
{
    int arr[] = {6, 12, 18, 24, 36, 40}; 
    int size = sizeof(arr) / sizeof(arr[0]);

    int even[size]; 
    int count = 0; 

    for (int i = 0; i < size; ++i) 
    {
        if (arr[i] % 2 == 0) 
        { 
            even[count] = arr[i];
            count++; 
        }
    
    }
    
    cout<<"now count: "<<count<<endl;

    int arr2[count - 1];
    
    for (int i = 0; i < count - 1; ++i) 
    {
        int a = even[i];
        int b = even[i + 1];

        while (b != 0) 
        {
            int temp = b;
            b = a % b;
            a = temp;
        }
        arr2[i] = a;
    }

    cout << "Even numbers: [";
    for (int i = 0; i < count; ++i) 
    {
        cout << even[i];
        if (i < count - 1) 
        {
            cout << ", ";
        }
    }
    cout << "]" << endl;

    cout << "HCF : [";
    for (int i = 0; i < count - 1; ++i) 
    {
        cout << arr2[i];
        if (i < count - 2) {
            cout << ", "; 
        }
    }
    cout << "]" << endl;

    return 0;
}


