#include <bits/stdc++.h>
using namespace std;

int largest(vector<int>& arr, int k) 
{
    map<int, int> remp;
    int max1 = 0;
    int x = 0;
    
    for (int i = 0; i < arr.size(); i++) 
    {
        x += arr[i];
        int rem = x % k;
     
        if (rem < 0) 
        {
            rem += k;
        }
        if (rem == 0) 
        {
            max1 = i + 1;
        } 
        else if (remp.find(rem) != remp.end()) {
            int sub = i - remp[rem];
            max1 = max(max1, sub);
        }
        else {
            remp[rem] = i;
        }
    }
    return max1;
}

int main() 
{
    int n, k;
    cout << "Enter the size of the array and the value of k: ";
    cin >> n >> k;
    
    vector<int> arr(n);
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) 
    {
        cin >> arr[i];
    }
    
    cout << "Length of the largest subarray whose sum is divisible by " << k << " is: " 
         << largest(arr, k) << endl;
    return 0;
}
